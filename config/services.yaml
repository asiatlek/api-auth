# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\EventListener\AuthenticationSuccessListener:
        arguments:
            $refreshTokenManager: '@gesdinet.jwtrefreshtoken.refresh_token_manager'
        tags:
            - { name: 'kernel.event_listener', event: 'lexik_jwt_authentication.on_authentication_success', method: 'onAuthenticationSuccessResponse' }

    App\EventListener\JWTFailureListener:
        tags:
            - { name: 'kernel.event_listener', event: 'lexik_jwt_authentication.on_jwt_invalid', method: 'onJWTInvalid' }
            - { name: 'kernel.event_listener', event: 'lexik_jwt_authentication.on_jwt_not_found', method: 'onJWTNotFound' }
            - { name: 'kernel.event_listener', event: 'lexik_jwt_authentication.on_jwt_expired', method: 'onJWTExpired' }


    App\EventListener\JsonExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException }

    App\Security\LoginAttemptService:
        arguments:
            $loginAttemptRepository: '@App\Repository\LoginAttemptRepository'
            $em: '@doctrine.orm.entity_manager'

    App\Security\JWTAuthenticationFailureHandler:
        arguments:
            $loginAttemptService: '@App\Security\LoginAttemptService'
